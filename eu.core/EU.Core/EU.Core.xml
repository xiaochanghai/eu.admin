<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EU.Core.Api</name>
    </assembly>
    <members>
        <member name="T:EU.Core.Controllers.AuthorizeController">
            <summary>
            登录管理【无权限】
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.AuthorizeController.#ctor(EU.Core.IServices.ISmUsersServices,EU.Core.AuthHelper.PermissionRequirement,Microsoft.Extensions.Logging.ILogger{EU.Core.Controllers.AuthorizeController})">
            <summary>
            构造函数注入
            </summary>
            <param name="smUsersServices"></param> 
            <param name="requirement"></param>
            <param name="logger"></param>
        </member>
        <member name="M:EU.Core.Controllers.AuthorizeController.Login(EU.Core.Model.LoginRequest)">
            <summary>
            用户认证-认证授权
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.AuthorizeController.CurrentUser">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.AuthorizeController.RestPassword(EU.Core.Model.RestPassword)">
            <summary>
            修改密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.AuthorizeController.LogOut">
            <summary>
            退出登录
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Controllers.BaseController`5">
            <summary>
            增删改查基础服务
            </summary>
            <typeparam name="IServiceBase"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntityDto"></typeparam>
            <typeparam name="TInsertDto"></typeparam>
            <typeparam name="TEditDto"></typeparam>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.#ctor(`0)">
            <summary>
            初始化 (注入)
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.QueryByFilter(EU.Core.Common.QueryFilter)">
            <summary>
            根据条件查询数据
            </summary>
            <param name="filter">条件</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.QueryById(System.Guid)">
            <summary>
             根据Id查询数据
            </summary>
            <param name="Id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.GetPageList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            查询数据
            </summary>
            <param name="paramData"></param>
            <param name="sorter"></param>
            <param name="filter"></param>
            <param name="parentColumn"></param>
            <param name="parentId"></param>
            <param name="moduleCode"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.Insert(System.Object)">
            <summary>
            新增数据
            </summary>
            <param name="insertModel"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.BulkInsert(System.Collections.Generic.List{`3})">
            <summary>
            批量新增数据
            </summary>
            <param name="insertModels"></param>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.Put(System.Guid,System.Object)">
            <summary>
            更新数据
            </summary>
            <param name="Id">主键ID</param>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.UpdateReturn(System.Guid,System.Object)">
            <summary>
            更新数据
            </summary>
            <param name="Id">主键ID</param>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.Delete(System.Guid)">
            <summary>
            删除数据
            </summary>
            <param name="Id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.BulkDelete(System.Guid[])">
            <summary>
            批量删除数据
            </summary>
            <param name="Ids">主键IDs</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.Audit(System.Guid)">
             <summary>
            审核数据
             </summary>
             <param name="Id">主键ID</param>
             <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.BulkAudit(System.Guid[])">
            <summary>
            审核删除数据
            </summary>
            <param name="Ids">主键IDs</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.Revocation(System.Guid)">
            <summary>
            撤销数据
            </summary>
            <param name="Id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.BulkRevocation(System.Guid[])">
            <summary>
            批量撤销数据
            </summary>
            <param name="Ids">主键IDs</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.InvokeService(System.String,System.Object[])">
            <summary>
            反射调用service方法
            </summary>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.BaseController`5.InvokeService(System.String,System.Type[],System.Object[])">
            <summary>
            反射调用service方法
            </summary>
            <param name="methodName"></param>
            <param name="types">为要调用重载的方法参数类型：new Type[] { typeof(SaveDataModel)</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Controllers.CommonController">
            <summary>
            公共服务
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.GetGridList(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            自定义列模块数据返回
            </summary>
            <param name="paramData">查询条件</param>
            <param name="moduleCode">模块代码</param>
            <param name="sorter">排序</param>
            <param name="parentColumn"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.QueryByFilter(EU.Core.Common.QueryFilter,System.String)">
            <summary>
            自定义列模块数据返回
            </summary>
            <param name="filter">filter</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.ClearCache">
            <summary>
            清空缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.ExportExcelAsync(EU.Core.Common.QueryFilter,System.String)">
            <summary>
            Excel导出
            </summary>
            <param name="filter">filter</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.ImportExcelAsync(EU.Core.Model.ImportExcelForm,System.String)">
            <summary>
            Excel导入
            </summary>
            <param name="import">导入数据</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.TransferExcelData(EU.Core.Model.TransferExcelRequest,System.String)">
            <summary>
            Excel导入数据转换
            </summary>
            <param name="request">请求数据</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.ComboGridData(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String[],System.String)">
            <summary>
            获取通用下拉数据
            </summary>
            <param name="parentColumn"></param>
            <param name="parentId"></param>
            <param name="current"></param>
            <param name="pageSize"></param>
            <param name="code"></param>
            <param name="items"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.Query(System.String,System.Guid)">
            <summary>
            查询数据
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.Add(System.String,System.Object)">
            <summary>
            新增数据
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="entity">数据</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.Update(System.String,System.Guid,System.Object)">
            <summary>
            更新数据
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="id">主键ID</param>
            <param name="entity">数据</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.Delete(System.String,System.Guid)">
            <summary>
            删除数据
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.Delete(System.String,System.Collections.Generic.List{System.Guid})">
            <summary>
            批量删除数据
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="ids">主键ID集</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.GenerateAllEntity">
            <summary>
            生成所有表实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.CommonController.SyncData">
            <summary>
            生成所有表实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.#ctor(SqlSugar.ISqlSugarClient,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetFrameFiles">
            <summary>
            获取 整体框架 文件(主库)(一般可用第一次生成)
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetFrameFilesByTableNames(System.String[],System.String)">
            <summary>
            获取仓储层和服务层(需指定表名和数据库)
            </summary>
            <param name="ConnID">数据库链接名称</param>
            <param name="tableNames">需要生成的表名</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetFrameFilesByTableNamesForEntity(System.String[],System.String)">
            <summary>
            获取实体(需指定表名和数据库)
            </summary>
            <param name="ConnID">数据库链接名称</param>
            <param name="tableNames">需要生成的表名</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetFrameFilesByTableNamesForController(System.String[],System.String)">
            <summary>
            获取控制器(需指定表名和数据库)
            </summary>
            <param name="ConnID">数据库链接名称</param>
            <param name="tableNames">需要生成的表名</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetAllFrameFilesByTableNames(System.String,System.String)">
            <summary>
            DbFrist 根据数据库表名 生成整体框架,包含Model层(一般可用第一次生成)
            </summary>
            <param name="ConnID">数据库链接名称</param>
            <param name="tableName">需要生成的表名</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetTableInfoList(System.String,EU.Core.Model.Systems.DataBase.DataBaseReadType)">
            <summary>
            获取表信息
            </summary>
            <param name="configId">配置Id</param>
            <param name="readType">读取类型</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.DbFirstController.GetColumnInfosByTableName(System.String,System.String,EU.Core.Model.Systems.DataBase.DataBaseReadType)">
            <summary>
            获取表字段
            </summary>
            <param name="tableName">表名</param>
            <param name="configId">ConfigId</param>
            <param name="readType">读取类型</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Controllers.LoginController">
            <summary>
            登录管理【无权限】
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.#ctor(EU.Core.IServices.ISmUsersServices,EU.Core.AuthHelper.PermissionRequirement,Microsoft.Extensions.Logging.ILogger{EU.Core.Controllers.LoginController})">
            <summary>
            构造函数注入
            </summary>  
            <param name="smUsersServices"></param> 
            <param name="requirement"></param> 
            <param name="logger"></param>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.GetJwtStr(System.String,System.String)">
            <summary>
            获取JWT的方法1
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.GetJwtStrForNuxt(System.String,System.String)">
            <summary>
            获取JWT的方法2：给Nuxt提供
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.GetJwtToken3(System.String,System.String)">
            <summary>
            获取JWT的方法3：整个系统主要方法
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.RefreshToken(System.String)">
            <summary>
            请求刷新Token（以旧换新）
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.Getjsonp(System.String,System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            获取JWT的方法4：给 JSONP 测试
            </summary>
            <param name="callBack"></param>
            <param name="id"></param>
            <param name="sub"></param>
            <param name="expiresSliding"></param>
            <param name="expiresAbsoulute"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.Md5Password(System.String)">
            <summary>
            测试 MD5 加密字符串
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.SwgLogin(EU.Core.Controllers.SwaggerLoginRequest)">
            <summary>
            swagger登录
            </summary>
            <param name="loginRequest"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.LoginController.WxLogin(System.String,System.String)">
            <summary>
            weixin登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.MonitorController.Server">
            <summary>
            服务器配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.MonitorController.Get">
            <summary>
            SignalR send data
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Controllers.ValuesController">
            <summary>
            Values控制器
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.#ctor(EU.Core.Model.Love,EU.Core.Common.HttpContextUser.IUser,EU.Core.Common.Https.HttpPolly.IHttpPollyHelper,EU.Core.EventBus.IRabbitMQPersistentConnection,Microsoft.Extensions.Options.IOptions{EU.Core.Common.Option.SeqOptions})">
            <summary>
            ValuesController
            </summary>  
            <param name="love"></param> 
            <param name="user"></param> 
            <param name="httpPollyHelper"></param>
            <param name="persistentConnection"></param>
            <param name="seqOptions"></param>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.TestRabbitMqPublish">
            <summary>
            测试Rabbit消息队列发送
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.TestRabbitMqSubscribe">
            <summary>
            测试Rabbit消息队列订阅
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.RedisMq(EU.Core.Extensions.IRedisBasketRepository)">
            <summary>
            测试Redis消息队列
            </summary>
            <param name="_redisBasketRepository"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.EventBusTry(EU.Core.EventBus.IEventBus,System.String)">
            <summary>
            测试RabbitMQ事件总线
            </summary>
            <param name="_eventBus"></param>
            <param name="TiobonId"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            Get(int id)方法
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.RequiredP(System.String)">
            <summary>
            测试参数是必填项
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.GetUserInfo(System.String)">
            <summary>
            通过 HttpContext 获取用户信息
            </summary>
            <param name="ClaimType">声明类型，默认 jti </param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.Source">
            <summary>
            to redirect by route template name.
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.Destination">
            <summary>
            route with template name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.TestPostPara(System.String)">
            <summary>
            测试 post 参数
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.FluentVaTest(EU.Core.Filter.UserRegisterVo)">
            <summary>
            测试Fulent做参数校验
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            Put方法
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            Delete方法
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.GetAllConfigByAppllo(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            测试接入Apollo获取配置信息
            </summary>
        </member>
        <member name="M:EU.Core.Controllers.ValuesController.GetConfigByAppllo(System.String)">
            <summary>
            通过此处的key格式为 xx:xx:x
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.BdCurrencyController">
            <summary>
            币别(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.BdCustomerClassController">
            <summary>
            客户分类(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.CustomerController">
            <summary>
            客户(Controller)
            </summary>
            
        </member>
        <member name="T:EU.Core.Api.Controllers.CustomerDeliveryAddressController">
            <summary>
            客户地址(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.CustomerDeliveryAddressController.GetDefaultData(System.Guid)">
            <summary>
            获取客户默认地址
            </summary>
            <param name="customerId">客户ID</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.BdCustomerLevelController">
            <summary>
            客户等级(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.GoodsLocationController">
            <summary>
            货位(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.MaterialController">
            <summary>
            物料管理(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.BdMaterialInventoryController">
            <summary>
            物料库存(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.BdMaterialIVChangeController">
            <summary>
            BdMaterialIVChange(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.MaterialTypeController">
            <summary>
            物料类型(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.MaterialTypeController.GetAllMaterialType">
            <summary>
            获取物料类型树结构数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.MaterialTypeController.QueryClass(System.Guid)">
            <summary>
            获取物料类型树结构数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.MaterialTypeController.QueryClass">
            <summary>
            获取物料类型树结构数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SettlementWayController">
            <summary>
            结算方式(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.StockController">
            <summary>
            仓库 (Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SupplierController">
            <summary>
            供应商(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvAccountingController">
            <summary>
            库存建帐(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvAccountingDetailController">
            <summary>
            库存建帐明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvCheckController">
            <summary>
            库存盘点单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.IvCheckController.BulkOrderPosting(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvCheckDetailController">
            <summary>
            库存盘点单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvInController">
            <summary>
            库存入库单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.IvInController.BulkOrderPosting(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvInDetailController">
            <summary>
            库存入库单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvOutController">
            <summary>
            库存出库单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.IvOutController.BulkOrderPosting(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvOutDetailController">
            <summary>
            库存出库单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.IvSafeConfigController">
            <summary>
            安全库存设置(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.NacosController">
            <summary>
            服务管理 
            </summary>
        </member>
        <member name="F:EU.Core.Api.Controllers.NacosController.NacosNamingService">
            <summary>
            INacosNamingService
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.NacosController.#ctor(Nacos.V2.INacosNamingService)">
            <summary>
            
            </summary>
            <param name="nacosNamingService"></param>
        </member>
        <member name="M:EU.Core.Api.Controllers.NacosController.CheckSystemStartFinish">
            <summary>
            系统实例是否启动完成
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.NacosController.GetStatus">
            <summary>
            获取Nacos 状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.NacosController.Register">
            <summary>
            服务上线
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.NacosController.Deregister">
            <summary>
            服务下线
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SignalRTestController">
            <summary>
            SignalR测试
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SplitDemoController">
            <summary>
            分表demo
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SplitDemoController.Get(System.DateTime,System.DateTime,System.Int32,System.String,System.Int32)">
            <summary>
            分页获取数据
            </summary>
            <param name="beginTime"></param>
            <param name="endTime"></param>
            <param name="page"></param>
            <param name="key"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SplitDemoController.GetById(System.Int64)">
            <summary>
            根据ID获取信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SplitDemoController.Post(EU.Core.Model.Models.SplitDemo)">
            <summary>
            添加一条测试数据
            </summary>
            <param name="splitDemo"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SplitDemoController.Put(EU.Core.Model.Models.SplitDemo)">
            <summary>
            修改一条测试数据
            </summary>
            <param name="splitDemo"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SplitDemoController.Delete(System.Int64)">
            <summary>
            根据id删除数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoArrivalOrderController">
            <summary>
            采购到货通知单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoArrivalOrderController.BulkInsertDetailAsync(System.Object,System.Guid)">
            <summary>
            批量导入明细
            </summary>
            <param name="entity">数据</param>
            <param name="id">订单ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoArrivalOrderController.BulkInsertInAsync(System.Object)">
            <summary>
            批量导入入库单
            </summary>
            <param name="entity">数据</param> 
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoArrivalOrderController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoArrivalOrderDetailController">
            <summary>
            采购到货通知单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoInOrderController">
            <summary>
            采购入库单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoInOrderController.BulkInsertDetailAsync(System.Object,System.Guid)">
            <summary>
            批量导入明细
            </summary>
            <param name="entity">数据</param> 
            <param name="id">id</param> 
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoInOrderController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoInOrderController.BulkOrderCarryTo(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoInOrderDetailController">
            <summary>
            采购入库单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoOrderController">
            <summary>
            采购单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoOrderController.BulkInsertNotice(System.Object)">
            <summary>
            批量导入出货通知单
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoOrderController.BulkInsertIn(System.Object)">
            <summary>
            批量导入入库单
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoOrderDetailController">
            <summary>
            采购单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoRequestionController">
            <summary>
            请购单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoRequestionController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoRequestionDetailController">
            <summary>
            请购单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoReturnOrderController">
            <summary>
            采购退货单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoReturnOrderController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.PoReturnOrderController.BulkOrderCarryTo(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.PoReturnOrderDetailController">
            <summary>
            采购退货单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdChangeOrderController">
            <summary>
            销售变更单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdChangeOrderController.BulkOrderChange(System.Guid[])">
            <summary>
            执行变更
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdChangeOrderDetailController">
            <summary>
            销售变更单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdOrderController">
            <summary>
            销售单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdOrderController.BulkInsertShip(System.Object)">
            <summary>
            批量导入出货通知单
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdOrderController.BulkInsertOut(System.Object)">
            <summary>
            批量导入出库单
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdOrderController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdOrderController.BulkOrderChange(System.Collections.Generic.List{System.Guid})">
            <summary>
            订单变更
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdOrderDetailController">
            <summary>
            销售订单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdOutOrderController">
            <summary>
            出库单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdOutOrderController.BulkOrderCarryTo(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdOutOrderDetailController">
            <summary>
            出库单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdReturnOrderController">
            <summary>
            退库单(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdReturnOrderController.BulkInsertDetail(System.Collections.Generic.List{EU.Core.Model.Entity.SdReturnOrderDetail},System.Guid)">
            <summary>
            批量导入出库明细
            </summary>
            <param name="entitys"></param>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdReturnOrderController.BulkOrderCarryTo(System.Guid[])">
            <summary>
            过账
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdReturnOrderDetailController">
            <summary>
            退货单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdShipOrderController">
            <summary>
            发货单((Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdShipOrderController.BulkInsertShip(System.Object,System.Guid)">
            <summary>
            批量导入出货明细
            </summary>
            <param name="entity"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdShipOrderController.BulkOrderComplete(System.Guid[])">
            <summary>
            订单完结
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SdShipOrderController.BulkInsertOut(System.Object)">
            <summary>
            批量导入出库单
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SdShipOrderDetailController">
            <summary>
            发货单明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.Systems.CacheManageController">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.CacheManageController.Get">
            <summary>
            获取全部缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.CacheManageController.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.CacheManageController.Post(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            新增
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.CacheManageController.Delete">
            <summary>
            删除全部缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.CacheManageController.Delete(System.String)">
            <summary>
            删除缓存
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.Systems.DataBaseController">
            <summary>
            数据库管理
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DataBaseController.GetAllConfig">
            <summary>
            获取库配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DataBaseController.GetTableInfoList(System.String,EU.Core.Model.Systems.DataBase.DataBaseReadType)">
            <summary>
            获取表信息
            </summary>
            <param name="configId">配置Id</param>
            <param name="readType">读取类型</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DataBaseController.GetColumnInfosByTableName(System.String,System.String,EU.Core.Model.Systems.DataBase.DataBaseReadType)">
            <summary>
            获取表字段
            </summary>
            <param name="tableName">表名</param>
            <param name="configId">ConfigId</param>
            <param name="readType">读取类型</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DataBaseController.PutTableEditRemark(EU.Core.Model.Systems.DataBase.EditTableInput)">
            <summary>
            编辑表备注
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DataBaseController.PutColumnEditRemark(EU.Core.Model.Systems.DataBase.EditColumnInput)">
            <summary>
            编辑列备注
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController">
            <summary>
            动态建表 CURD
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController.GetDynamicType">
            <summary>
            动态type
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController.GetDynamicType2">
            <summary>
            动态type 继承BaseEntity
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController.TestCreateTable">
            <summary>
            测试建表
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController.TestQuery">
            <summary>
            测试查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Systems.DynamicCodeFirstController.TestInsert(System.String,System.String)">
            <summary>
            测试写入
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.FileController">
            <summary>
            文件服务(Controller)
            </summary>
        </member>
        <member name="F:EU.Core.Api.Controllers.FileController._hostingEnvironment">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.GetFileList(System.Guid,System.String)">
            <summary>
            获取文件列表
            </summary>
            <param name="masterId">masterId</param>
            <param name="imageType">类型</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.UploadAsync(EU.Core.Model.UploadForm)">
            <summary>
            上传附件接口
            </summary>
            <param name="upload"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.UploadImageAsync(EU.Core.Model.UploadForm)">
            <summary>
            上传图片
            </summary>
            <param name="upload"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.UploadVideoAsync(EU.Core.Model.ChunkUpload)">
            <summary>
            上传视频
            </summary>
            <param name="upload"></param> 
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.GetByUrl(System.String)">
            <summary>
            获取图片
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.GetById(System.Guid)">
            <summary>
            获取图片
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.FileController.Download(System.Guid)">
            <summary>
            下载文件
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmApplicationDeviceController">
            <summary>
            APP客户端记录(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmApplicationDeviceController.Record(EU.Core.Model.Entity.SmApplicationDevice)">
            <summary>
            记录设备信息
            </summary>
            <param name="device">设备信息</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmApplicationRecordController">
            <summary>
            APP客户端记录(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmAutoCodeController">
            <summary>
            自动编号(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmCityController">
            <summary>
            城市(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmCommonListSqlController">
            <summary>
            系统通用下拉(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmCompanyController">
            <summary>
            组织(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmComponentController">
            <summary>
            SmComponent(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmConfigController">
            <summary>
            系统配置(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmConfigController.GetListByGroup">
            <summary>
            系统参数明细 -- 根据参数分组查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmConfigController.SmConfigView">
            <summary>
            SmConfigView
            </summary>
        </member>
        <member name="P:EU.Core.Api.Controllers.SmConfigController.SmConfigView.detail">
            <summary>
            
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmConfigGroupController">
            <summary>
            系统配置组(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmCountyController">
            <summary>
            区县(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmDepartmentController">
            <summary>
            部门(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmEmployeeController">
            <summary>
            员工管理(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmFieldCatalogController">
            <summary>
            映射表字段(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmFunctionPrivilegeController">
            <summary>
            功能权限(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmImportDataDetailController">
            <summary>
            系统导入数据明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmImportErrorController">
            <summary>
            系统导入模板异常信息(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmImpTemplateController">
            <summary>
            系统导入模板(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmImpTemplateController.QueryByModuleId(System.Guid)">
            <summary>
            根据模板ID获取明细
            </summary>
            <param name="moduleId">模板ID</param> 
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmImpTemplateDetailController">
            <summary>
            导入模板定义明细(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmLovController">
            <summary>
            SmLov(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmLovController.GetByCode(System.String)">
            <summary>
            根据code获取ComBoBox下拉值
            </summary>
            <param name="code">代码</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmLovDetailController">
            <summary>
            SmLovDetail(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmModuleColumnController">
            <summary>
            SmModuleColumn(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmModulesController">
            <summary>
            系统模板(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetMenuData">
            <summary>
            获取左侧菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetAuthMenu">
            <summary>
            获取左侧菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetModuleInfo(System.String)">
            <summary>
            获取模块信息
            </summary>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetModuleInfo1(System.String)">
            <summary>
            获取模块信息
            </summary>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetModuleFormColumn(System.String)">
            <summary>
            获取模块表单列信息
            </summary>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.GetModuleLogInfo(System.String,System.String)">
            <summary>
            获取模块日志信息
            </summary>
            <param name="moduleCode"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.ExportModuleSqlScript(System.Collections.Generic.List{System.Guid})">
            <summary>
            导出模块SQL
            </summary>
            <param name="ids">模块ID列表</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.UpdateTaxisNoAsync(System.String,System.Collections.Generic.List{EU.Core.Model.Entity.SmModuleColumn},System.String)">
            <summary>
            更新模块表单列排序号
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="columns">栏位列表</param>
            <param name="type">类型（list、form）</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.UpdateColumnAsync(System.String,EU.Core.Model.SmModuleFormOption,System.String)">
            <summary>
            更新模块表单列
            </summary>
            <param name="moduleCode">模块代码</param>
            <param name="column">栏位</param>
            <param name="type">类型（list、form）</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.RecordUserMoudleColumn(System.Guid,Newtonsoft.Json.Linq.JObject)">
            <summary>
            记录用户模块列
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="param">columns</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModulesController.CopyAsync(System.Guid,EU.Core.Model.Entity.SmModules)">
            <summary>
            复制模块
            </summary>
            <param name="moduleId">模块ID</param> 
            <param name="module">模块</param> 
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmModuleSqlController">
            <summary>
            系统模块SQL(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModuleSqlController.GetModuleInfo(System.Guid)">
            <summary>
            获取模块信息
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmModuleSqlController.GetModuleFullSql(System.Guid)">
            <summary>
            获取模块信息
            </summary>
            <param name="moduleId">模块ID</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmProvinceController">
            <summary>
            省份(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmQuartzJobController">
            <summary>
            任务调度(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmQuartzJobController.Operate(System.Guid,System.String,EU.Core.Model.Entity.SmQuartzJob)">
            <summary>
            远程操作
            </summary>
            <param name="id">任务清单标识</param>
            <param name="operate">操作值 字典Code为`DIC.TASK.OPERATE`</param>
            <param name="args">操作参数，当操作为修改参数是必填</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmQuartzJobLogController">
            <summary>
            执行任务日志(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmRoleFunctionController">
            <summary>
            角色功能权限 (Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmRoleModuleController">
            <summary>
            角色模块权限(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmRoleModuleController.BatchInsertRoleModule(EU.Core.Model.RoleModuleVM)">
            <summary>
            批量导入模块权限
            </summary>
            <param name="roleModuleVm"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmRoleModuleController.UpdateRoleModule(System.Guid,System.Collections.Generic.List{System.String})">
            <summary>
            更新角色模块权限
            </summary>
            <param name="roleId">角色ID</param>
            <param name="moduleList">模块</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmRoleModuleController.GetAllModuleList">
            <summary>
            获取模块数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmRoleModuleController.GetRoleModule(System.Guid)">
            <summary>
            获取角色模块数据
            </summary>
            <param name="roleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmRolesController">
            <summary>
            系统角色(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmTableCatalogController">
            <summary>
            映射表(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmTableCatalogController.InitAssignmentTable(System.Guid)">
            <summary>
            初始化指定表
            </summary>
            <param name="id">映射表id</param>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmTableCatalogController.InitAllTable">
            <summary>
            初始化所有表
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmUserModuleColumnController">
            <summary>
            用户模块列(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmUserRoleController">
            <summary>
            用户角色(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmUserRoleController.QueryUserRole(System.Guid)">
            <summary>
            获取用户角色数据
            </summary>
            <param name="userId">用户ID</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmUserController">
            <summary>
            系统用户(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmUserController.UploadAvatarAsync(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传头像
            </summary>
            <param name="file">文件</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmWorkFlowController">
            <summary>
            工作流(Controller)
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.SmWorkFlowController.NodeSave(EU.Core.Model.WorkFlowNode,System.Guid)">
            <summary>
            流程节点保存
            </summary>
            <param name="node">节点数据</param>
            <param name="id">流程ID</param>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.SmWorkFlowNodeController">
            <summary>
            工作流节点(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Controllers.Tenant.TenantByDbController">
            <summary>
            多租户-多库方案 测试
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByDbController.GetAll">
            <summary>
            获取租户下全部业务数据 <br/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByDbController.Post(EU.Core.Model.Models.SubLibraryBusinessTable)">
            <summary>
            新增数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.Tenant.TenantByIdController">
            <summary>
            多租户-Id方案 测试
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByIdController.GetAll">
            <summary>
            获取租户下全部业务数据 <br/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByIdController.Post(EU.Core.Model.Models.BusinessTable)">
            <summary>
            新增业务数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.Tenant.TenantByTableController">
            <summary>
            多租户-多表方案 测试
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByTableController.GetAll">
            <summary>
            获取租户下全部业务数据 <br/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantByTableController.Post(EU.Core.Model.Models.MultiBusinessTable)">
            <summary>
            新增数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.Tenant.TenantManagerController">
            <summary>
            租户管理
            </summary>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantManagerController.GetAll">
            <summary>
            获取全部租户
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantManagerController.GetInfo(System.Int64)">
            <summary>
            获取租户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantManagerController.Post(EU.Core.Model.Models.SysTenant)">
            <summary>
            新增租户信息 <br/>
            此处只做演示，具体要以实际业务为准
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantManagerController.Put(EU.Core.Model.Models.SysTenant)">
            <summary>
            修改租户信息 <br/>
            此处只做演示，具体要以实际业务为准
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Core.Api.Controllers.Tenant.TenantManagerController.Delete(System.Int64)">
            <summary>
            删除租户 <br/>
            此处只做演示，具体要以实际业务为准
            </summary>
            <returns></returns>
        </member>
        <member name="T:EU.Core.Api.Controllers.WxConfigController">
            <summary>
            账号配置(Controller)
            </summary>
        </member>
        <member name="T:EU.Core.Api.Filter.GlobalActionFilter">
            <summary>
            全局请求验证
            </summary>
        </member>
        <member name="P:EU.Core.Api.Filter.GlobalActionFilter.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:EU.Core.Api.Filter.GlobalActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:EU.Core.Api.Filter.GlobalActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:EU.Core.Api.Filter.GlobalActionFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:EU.Core.Api.Filter.GlobalActionFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:EU.Core.Filter.GlobalRouteAuthorizeConvention">
            <summary>
            Summary:全局路由权限公约
            Remarks:目的是针对不同的路由，采用不同的授权过滤器
            如果 controller 上不加 [Authorize] 特性，默认都是 Permission 策略
            否则，如果想特例其他授权机制的话，需要在 controller 上带上  [Authorize]，然后再action上自定义授权即可，比如 [Authorize(Roles = "Admin")]
            </summary>
        </member>
        <member name="T:EU.Core.Filter.GlobalAuthorizeFilter">
            <summary>
            全局权限过滤器【无效】
            </summary>
        </member>
        <member name="T:EU.Core.Filter.GlobalExceptionsFilter">
            <summary>
            全局异常错误日志
            </summary>
        </member>
        <member name="M:EU.Core.Filter.GlobalExceptionsFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:EU.Core.Filter.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:EU.Core.Filter.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="T:EU.Core.Filter.GlobalRoutePrefixFilter">
            <summary>
            全局路由前缀公约
            </summary>
        </member>
        <member name="T:EU.Core.SwaggerHelper.CustomRouteAttribute">
            <summary>
            自定义路由 /api/{version}/[controler]/[action]
            </summary>
        </member>
        <member name="P:EU.Core.SwaggerHelper.CustomRouteAttribute.GroupName">
            <summary>
            分组名称,是来实现接口 IApiDescriptionGroupNameProvider
            </summary>
        </member>
        <member name="M:EU.Core.SwaggerHelper.CustomRouteAttribute.#ctor(System.String)">
            <summary>
            自定义路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
        </member>
        <member name="M:EU.Core.SwaggerHelper.CustomRouteAttribute.#ctor(EU.Core.Extensions.CustomApiVersion.ApiVersions,System.String)">
            <summary>
            自定义版本+路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
            <param name="version"></param>
        </member>
        <member name="T:EU.Web.Controllers.Server.ServerController">
            <summary>
            系统服务器监控服务
            </summary>
        </member>
        <member name="M:EU.Web.Controllers.Server.ServerController.GetServerBase">
            <summary>
            获取服务器配置信息
            </summary> 
            <returns></returns>
        </member>
        <member name="M:EU.Web.Controllers.Server.ServerController.ParseToLong(System.Object)">
            <summary>
            将object转换为long，若失败则返回0
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EU.Web.Controllers.Server.ServerController.GetServerUsed">
            <summary>
            获取服务器使用信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Web.Controllers.Server.ServerController.GetServerDisk">
            <summary>
            获取服务器磁盘信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:EU.Web.Controllers.Server.ServerController.GetAssemblyList">
            <summary>
            获取框架主要程序集
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
